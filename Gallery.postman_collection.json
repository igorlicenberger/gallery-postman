{
	"info": {
		"_postman_id": "094e24d2-ef37-4267-8447-224e4f9bf53e",
		"name": "Gallery",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Gallery app 1st page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Check the length of the target is equal to 10\", function () {\r",
							"    pm.expect(jsonData.galleries).to.have.lengthOf(10);\r",
							"});\r",
							"\r",
							"postman.setEnvironmentVariable('count',jsonData.count);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/galleries?page=1&term=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "term",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Gallery app 2nd page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"pm.test(\"Check the length of the target is equal to 10\", function () {\r",
							"    pm.expect(jsonData.galleries).to.have.lengthOf(10);\r",
							"});\r",
							"\r",
							"postman.setEnvironmentVariable('count',jsonData.count);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/galleries?page=2&term=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						},
						{
							"key": "term",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var email = \"Tester1\" + _.random(1, 1000000) + \"@example.com\"\r",
							"pm.environment.set(\"email\", email);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 400ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"first_name\":\"{{firstName}}\",\r\n    \"last_name\":\"{{lastName}}\",\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\",\r\n    \"password_confirmation\":\"{{confirmpassword}}\",\r\n    \"terms_and_conditions\":{{terms}}\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"tests[\"Token type:\" +  jsonData.token_type] = jsonData.token_type === \"bearer\"\r",
							"\r",
							"var token = jsonData.access_token;\r",
							"pm.environment.set(\"token\", token);\r",
							"\r",
							"var user_id = jsonData.user_id;\r",
							"pm.environment.set(\"user_id\", user_id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create gallery",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"var gallery_id = jsonData.id;\r",
							"pm.environment.set(\"gallery_id\", gallery_id);\r",
							"\r",
							"var title = pm.environment.get(\"title\");\r",
							"tests[\"title:\" + jsonData.title] = jsonData.title === title;\r",
							"\r",
							"var desc = pm.environment.get(\"description\");\r",
							"tests[\"description:\" + jsonData.description] = jsonData.description === desc;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"{{title}}\",\r\n    \"description\":\"{{description}}\",\r\n    \"images\":[\"{{images}}\"]\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/galleries",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"gallery_id\":{{gallery_id}},\r\n    \"body\":\"{{comment}}\"}"
				},
				"url": {
					"raw": "{{baseUrl}}/comments",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit gallery",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							" pm.expect(jsonData.description).to.eql(null);\r",
							"\r",
							"\r",
							"title2 = pm.environment.get(\"title2\");\r",
							"    pm.expect(jsonData.title).to.eql(title2);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "bearer{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"{{title2}}\",\r\n    \"description\":\"\",\r\n    \"images\":[\"{{images}}\"]\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/galleries/{{gallery_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries",
						"{{gallery_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "My galleries after edit",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "bearer{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/my-galleries?page=1&term=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"my-galleries"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "term",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Home page after edit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"var id = pm.environment.get(\"gallery_id\");\r",
							"var galerije = jsonData.galleries.filter(gallery => gallery.id === id);\r",
							"\r",
							"var title2 = pm.environment.get(\"title2\");\r",
							"tests[\"title:\" + galerije[0].title] = galerije[0].title === title2;\r",
							"tests[\"description:\" + galerije[0].description] = galerije[0].description === null;\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/galleries?page=1&term=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "term",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete gallery",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/galleries/{{gallery_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries",
						"{{gallery_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create gallery with 2 images",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"title\":\"{{title}}\",\r\n\"description\":{{description}}\",\r\n\"images\":[\"{{images}}\",\"{{images2}}\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/galleries",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/comments/{{comment_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"comments",
						"{{comment_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "All galleries check for delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse(responseBody);\r",
							"\r",
							"\r",
							"\r",
							"var idObrisaneGalerije = pm.variables.get(\"gallery_id\");\r",
							"\r",
							"\r",
							"var idExist = false;\r",
							"\r",
							"for (i = 0; i < jsonData.galleries.length; i++) {\r",
							"  \r",
							"  if (jsonData.galleries[i].id === idObrisaneGalerije) {\r",
							"      idExist = true;\r",
							"  }\r",
							"}\r",
							"\r",
							"tests[\"Stvarno je izbrisan\"] = idExist === false;\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "bearer{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/galleries?page=1&term=",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"galleries"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "term",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	]
}